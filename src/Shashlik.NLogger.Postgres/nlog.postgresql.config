<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="nlog/internal-nlog.txt">
  <extensions>
    <add assembly="Guc.NLogger" />
    <add assembly="NLog.Web.AspNetCore"/>
    <add assembly="NLog.MailKit"/>
  </extensions>
  <targets async="true">
    <!--<default-wrapper xsi:type="BufferingWrapper" bufferSize="100" flushTimeout="5000"/>-->

    <target
      xsi:type="Database"
      name="error">
      <connectionString>@{Conn}</connectionString>
      <dbProvider>Npgsql.NpgsqlConnection,Npgsql</dbProvider>
      <commandText>
        insert into "ErrorLogs"(
        "User",
        "ClientId",
        "LogTime",
        "Level",
        "Message",
        "Logger",
        "Exception",
        "ClientIp",
        "Method",
        "RequestUrl",
        "RequestBody",
        "RequestQueryString",
        "RequestFormData"
        ) values (
        @User,
        @ClientId,
        now(),
        @Level,
        @Message,
        @Logger,
        @Exception,
        @ClientIp,
        @Method,
        @RequestUrl,
        @RequestBody,
        @RequestQueryString,
        @RequestFormData
        );
      </commandText >
      <parameter name="@User"               layout="${aspnet-user-identity}" />
      <parameter name="@ClientId"                layout="${aspnet-request-clientid}" />
      <parameter name="@Level"               layout="${level}" />
      <parameter name="@Message"             layout="${message}" />
      <parameter name="@Logger"     layout="${logger}" />
      <parameter name="@Exception"        layout="${exception:format=toString,Data:maxInnerExceptionLevel=10}" />
      <parameter name="@ClientIp"  layout="${aspnet-request-ip}" />
      <parameter name="@Method"             layout="${aspnet-request-method}" />
      <parameter name="@RequestUrl"           layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
      <parameter name="@RequestBody"               layout="${aspnet-request-body}" />
      <parameter name="@RequestQueryString"         layout="${aspnet-request-querystring}" />
      <parameter name="@RequestFormData"              layout="${aspnet-request-form-custom}" />
    </target>

    <target xsi:type="Database" name="login">
      <connectionString>@{Conn}</connectionString>
      <dbProvider>Npgsql.NpgsqlConnection,Npgsql</dbProvider>
      <commandText>
        insert into "LoginLogs"(
        "User",
        "ClientId",
        "LogTime",
        "Level",
        "Message",
        "Logger",
        "ClientIp"
        ) values (
        @User,
        @ClientId,
        now(),
        @Level,
        @Message,
        @Logger,
        @ClientIp
        );
      </commandText >
      <parameter name="@User"               layout="${aspnet-user-identity}" />
      <parameter name="@ClientId"                layout="${aspnet-request-clientid}" />
      <parameter name="@LogTime"              layout="${date}" />
      <parameter name="@Level"               layout="${level}" />
      <parameter name="@Message"             layout="${message}" />
      <parameter name="@Logger"     layout="${logger}" />
      <parameter name="@ClientIp"  layout="${aspnet-request-ip}" />
    </target>

    <target
      xsi:type="Database"
      name="request">
      <connectionString>@{Conn}</connectionString>
      <dbProvider>Npgsql.NpgsqlConnection,Npgsql</dbProvider>
      <commandText>
        insert into "RequestLogs"(
        "User",
        "ClientId",
        "LogTime",
        "Level",
        "Message",
        "Logger",
        "Exception",
        "ClientIp",
        "Method",
        "RequestUrl",
        "RequestBody",
        "RequestQueryString",
        "RequestFormData"
        ) values (
        @User,
        @ClientId,
        now(),
        @Level,
        @Message,
        @Logger,
        @Exception,
        @ClientIp,
        @Method,
        @RequestUrl,
        @RequestBody,
        @RequestQueryString,
        @RequestFormData
        );
      </commandText >
      <parameter name="@User"               layout="${aspnet-user-identity}" />
      <parameter name="@ClientId"                layout="${aspnet-request-clientid}" />
      <parameter name="@Level"               layout="${level}" />
      <parameter name="@Message"             layout="${message}" />
      <parameter name="@Logger"     layout="${logger}" />
      <parameter name="@Exception"        layout="${exception:format=toString,Data:maxInnerExceptionLevel=10}" />
      <parameter name="@ClientIp"  layout="${aspnet-request-ip}" />
      <parameter name="@Method"             layout="${aspnet-request-method}" />
      <parameter name="@RequestUrl"           layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
      <parameter name="@RequestBody"               layout="${aspnet-request-body}" />
      <parameter name="@RequestQueryString"         layout="${aspnet-request-querystring}" />
      <parameter name="@RequestFormData"              layout="${aspnet-request-form-custom}" />
    </target>

    <target
      xsi:type="Database"
      name="operation">
      <connectionString>@{Conn}</connectionString>
      <dbProvider>Npgsql.NpgsqlConnection,Npgsql</dbProvider>
      <commandText>
        insert into "OperationLogs"(
        "User",
        "ClientId",
        "LogTime",
        "Level",
        "Message",
        "Logger",
        "ClientIp",
        "Method",
        "RequestUrl",
        "RequestBody",
        "RequestQueryString",
        "RequestFormData"
        ) values (
        @User,
        @ClientId,
        now(),
        @Level,
        @Message,
        @Logger,
        @ClientIp,
        @Method,
        @RequestUrl,
        @RequestBody,
        @RequestQueryString,
        @RequestFormData
        );
      </commandText >
      <parameter name="@User"               layout="${aspnet-user-identity}" />
      <parameter name="@ClientId"                layout="${aspnet-request-clientid}" />
      <parameter name="@Level"               layout="${level}" />
      <parameter name="@Message"             layout="${message}" />
      <parameter name="@Logger"     layout="${logger}" />
      <parameter name="@ClientIp"  layout="${aspnet-request-ip}" />
      <parameter name="@Method"             layout="${aspnet-request-method}" />
      <parameter name="@RequestUrl"           layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
      <parameter name="@RequestBody"               layout="${aspnet-request-body}" />
      <parameter name="@RequestQueryString"         layout="${aspnet-request-querystring}" />
      <parameter name="@RequestFormData"              layout="${aspnet-request-form-custom}" />
    </target>

    <target xsi:type="Mail"
        name="mail"
        subject="@{Email.Subject}"
        to="@{Email.To}"
        from="@{Email.From}"
        body='
${newline}【日志内容】:
${newline}
${newline}【LogTime】:${longdate}
${newline}
${newline}【User】:${aspnet-user-identity}
${newline}
${newline}【Logger】:${logger}
${newline}
${newline}【Message】:${message}
${newline}
${newline}【Level】:${level}
${newline}
${newline}【Exception】:${exception:format=toString,Data:maxInnerExceptionLevel=10}
${newline}
${newline}【ClientIp】:${aspnet-request-ip}
${newline}
${newline}【Method】:${aspnet-request-method}
${newline}
${newline}【RequestUrl】:${aspnet-request-url:IncludePort=true:IncludeQueryString=true}
${newline}
${newline}【RequestBody】:${aspnet-request-body}
${newline}
${newline}【RequestQueryString】:${aspnet-request-querystring}
${newline}
${newline}【RequestFormData】:${aspnet-request-form-custom}
${newline}
${newline}【Response】:${aspnet-request-response}
${newline}
            '
        smtpUserName="@{Email.SmtpUserName}"
        smtpPassword="@{Email.SmtpPassword}"
        smtpAuthentication="Basic"
        smtpServer="@{Email.SmtpServer}"
        smtpPort="@{Email.SmtpPort}"
        enableSsl="False"
        secureSocketOption="Auto"
        skipCertificateValidation="True"
 />
  </targets>

  <rules>
    <logger name="Guc.NLogger.Loggers.LoginLogs" minlevel="Info" writeTo="login" />
    <logger name="Guc.NLogger.Loggers.RequestLogs" minlevel="Info" writeTo="request" />
    <logger name="Guc.NLogger.Loggers.OperationLogs" minlevel="Info" writeTo="operation" />
    <logger name="*" minlevel="Warn" writeTo="error" >
      <filters>
        <when condition="equals(logger, 'Guc.NLogger.Loggers.LoginLogs')" action="Ignore" />
        <when condition="equals(logger, 'Guc.NLogger.Loggers.RequestLogs')" action="Ignore" />
        <when condition="equals(logger, 'Guc.NLogger.Loggers.OperationLogs')" action="Ignore" />
        @{Ignores}
      </filters>
    </logger>
    <logger name="*" minlevel="@{Email.Level}" writeTo="mail" enabled="@{Email.Enabled}">
      <filters>
        <when condition="equals(logger, 'Guc.NLogger.Loggers.LoginLogs')" action="Ignore" />
        <when condition="equals(logger, 'Guc.NLogger.Loggers.RequestLogs')" action="Ignore" />
        <when condition="equals(logger, 'Guc.NLogger.Loggers.OperationLogs')" action="Ignore" />
        @{Ignores}
      </filters>
    </logger>
  </rules>
</nlog>